Linked List 
2019/9/24
Linked List 與 Array 的差別：
  Array 的記憶體成塊成塊“切”，剩下零星的小空間，儅有新的資料進來時，沒有成塊的記憶體可以用，同時，零星的小空間也不能夠利用，從而造成空間的浪費。
  Linked List是將零碎的小空間串起來，從而加以利用。

使用Linked List的主要目的是：
    在記憶體達到上限時，如何合理的運用空間來儲存資料。

Linked List操作時，刪除、增加、查找文件都需要走訪所有的node，比較浪費時間。

“Introduction to Linked List” 視頻筆記：
    an array  =  a long box with many parititions of the same size
    a linked list  =  many boxes that are connected to each other
How a lined list can be implemented ?
       Firstly, the class of the objecst is called Box,
	class Box {
   	 int/string data
   	 Box next
	}
head <->head.data     head.next<->head.next.data

Secondly, 
       class Box{
             int data;
             Box next;
             Box(int data){
                 this.data = data;
            }
       }

Thirdly, the Box real name is Node,
       class Node{
	int data;
	Node next;
	Node(int data){
	    this.data = data;
	}
      }
example:   
   	Node nodeA = New Node(6);              nodeA.next = nodeB;
  	 Node nodeB = New Node(3);              nodeB.next = nodeC;
  	 Node nodeC = New Node(4);              nodeC.next = nodeD;
  	 Node nodeA = New Node(2);              nodeD.next = nodeE;
  	 Node nodeA = New Node(1);

Fourthly,
       def countNodes(head){
          #write your code here
       }
     assme that head != null


Fifthly,
     How many Linked List nodes do we have?

    def countNodes(Node head){
	//assuming that head != null
	int count = 1;
	Node current = head;
	while (current.next != null){
	current = current.next;
	count += 1;
	}
     }
    
Sixthly,
   	DOUBLE-Linked List
   	class Node {
 	 int data;
	 Node next;
	 Node prev;
	 Node(int data){
		 this.data = data
		}
                 }